version: '3.8'

services:
  planner_db:
    image: postgres:15
    container_name: planner_db
    environment:
      POSTGRES_DB: ${DB_NAME:-planner_db}
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "5432:5432"       # optional: expose to host
    volumes:
      - planner_db_data:/var/lib/postgresql/data
    networks:
      - tripwise-backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres} -d ${DB_NAME:-planner_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  tripplanner:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tripplanner
    ports:
      - "9093:9093"
    environment:
      # --- DB (use the service name 'planner_db' on the same Docker network) ---
      SPRING_DATASOURCE_URL: jdbc:postgresql://planner_db:${DB_PORT:-5432}/${DB_NAME:-planner_db}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME:-postgres}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD:-postgres}

      # --- Security (Google ID token validation) ---
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}

      # --- Outbound to Gateway (for calling TripProfile) ---
      TRIPHUB_BASE_URL: ${TRIPHUB_BASE_URL:-http://triphub}   # adjust if your gateway runs elsewhere
      TRIPPROFILE_BASE_PATH: ${TRIPPROFILE_BASE_PATH:-/tripprofile}
    depends_on:
      - planner_db
    networks:
      - tripwise-backend

volumes:
  planner_db_data:

networks:
  tripwise-backend:
    external: true
